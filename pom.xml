<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.apin</groupId>
    <artifactId>timer-consumer</artifactId>
    <version>1.5</version>

    <properties>
        <spring.version>4.0.5.RELEASE</spring.version>
        <project.mainClass>com.apin.Server</project.mainClass>
    </properties>

    <!--<scm>-->
        <!--&lt;!&ndash; 这个地方花了很长的时间，原因在于模仿网上scm:svn:http://192.168.1.68:3690/java/Trunk/201609用了http协议，而不知道根据自己事实上的情况是使用svn协议&ndash;&gt;-->
        <!--<connection>scm:svn:svn://192.168.1.68/java/Trunk/timer</connection>-->
        <!--<developerConnection>scm:svn:svn://192.168.1.68/java/Trunk/timer</developerConnection>-->
    <!--</scm>-->

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.2.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.4</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.3.0</version>
        </dependency>

        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20160212</version>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.38</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>1.7.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3.5</version>
        </dependency>

        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>1.8.6</version>
        </dependency>

        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
            <version>0.9.5</version>
        </dependency>

        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
            <version>2.7.3</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
            <version>2.4.1</version>
        </dependency>

        <dependency>
            <groupId>com.apin</groupId>
            <artifactId>kafka-producer</artifactId>
            <version>1.1</version>
        </dependency>

        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.4</version>
        </dependency>

    </dependencies>

    <build>
        <finalName>${project.artifactId}-${project.version}</finalName>
        <plugins>
            <plugin>
                <!-- 编译插件-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                    <!--如果不设置这个有可能会报错误：编码GBK的不可映射字符-->
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!--<plugin>-->
                <!--&lt;!&ndash; 版本发布插件&ndash;&gt;-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-release-plugin</artifactId>-->
                <!--<version>2.0-beta-7</version>-->
                <!--<configuration>-->
                    <!--<username>apinji</username>-->
                    <!--<password>apinji</password>-->
                    <!--<tagBase>svn://192.168.1.68/java/Tags/timer</tagBase>-->
                <!--</configuration>-->
            <!--</plugin>-->

            <plugin>
                <!-- 打包插件-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <!-- 告知 maven-jar-plugin添加一个 Class-Path元素到 MANIFEST.MF文件，以及在Class-Path元素中包括所有依赖项 -->
                            <addClasspath>true</addClasspath>
                            <!-- 所有的依赖项应该位于 lib文件夹 -->
                            <!--<classpathPrefix>lib/</classpathPrefix>-->
                            <!-- 当用户使用 lib命令执行JAR文件时，使用该元素定义将要执行的类名 -->
                            <mainClass>${project.mainClass}</mainClass>
                        </manifest>
                        <manifestEntries>
                            <Class-Path>.</Class-Path>
                        </manifestEntries>
                    </archive>
                    <excludes>
                        <!-- 去掉配置文件，否则配置文件会被一起打包进jar文件中，这样常常外部的配置文件就不起作用了-->
                        <exclude>**/*.properties</exclude>
                        <exclude>**/applicationContext.xml</exclude>
                        <exclude>**/mybatis-config.xml</exclude>
                    </excludes>
                </configuration>
            </plugin>


            <plugin>
                <!-- 包组装插件-->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>src/main/assembly/src.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <!--加上这个的主要目的是可以将mybatis的mapper.xml文件放置到和接口一致的位置-->
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                    <include>**/*.test</include>
                </includes>
            </resource>
        </resources>
    </build>


</project>